package com.eastdawn.action;

import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.sf.json.JSONObject;

import org.apache.struts2.ServletActionContext;

import com.eastdawn.bo.FilesBO;
import com.eastdawn.bo.ServiceGlBO;
import com.eastdawn.dao.FilesDao;
import com.eastdawn.dao.ServiceGlDao;
import com.eastdawn.po.Files;
import com.eastdawn.po.ServiceGl;

@SuppressWarnings("serial")
public class ServiceGlAction{
	
	private Long glId;//服务管理ID
	private String glNumber;//服务编号
	private String glName;//服务名称
	private Date fbTime;//服务发布时间
	private String fbPop;//发布人
	
	private Long statr;
	private Long totalNum;
	private String arlt;
	private String fileName;
	private ServiceGl serviceGl;
	private ServiceGlDao glDao;
	private ServiceGlBO glBO;
	
	private Files files;
	private FilesDao fileDao;
	private FilesBO fileBO;
	private List glList;
	private List fileList;
	
	//服务管理添加
	public String add() throws Exception {
		HttpServletResponse response = ServletActionContext.getResponse();
		Map queryMap = new HashMap();
		ServiceGl gl = new ServiceGl();
		try {
			gl.setGlName(this.glName);
			gl.setGlNumber(this.glNumber);
			gl.setFbTime(new Date());
			gl.setFbPop(this.fbPop);
			glBO.add(gl);
			if(this.arlt != null && !this.arlt.equals("")){
				this.fileAdd();
			}
			response.setCharacterEncoding("UTF-8"); 
			response.getWriter().write("1");
		} catch (Exception e) {
			e.printStackTrace();
			// TODO: handle exception
		}
		return null;
	}
	
	public String fileAdd() throws Exception {
		Files files = new Files();
		String []list=arlt.split(",");
		for(int i=1;i<list.length;i++){
		   files.setOnlinePath(list[i]);
		   files.setFileName(list[i]);
		   files.setParentId(this.glId);
		   fileBO.add(files);
		}
	    return null;
	}
	
	//服务查询
	public String execute() throws Exception {
		HttpSession session = ServletActionContext.getRequest().getSession();
		HttpServletResponse iResponse =ServletActionContext.getResponse();
		
		Map queryMap = new HashMap();
		try {
			if(this.glId != null && !this.glId.equals("")){
			    queryMap.put("glId", glId);
			}
			totalNum = glDao.getGLCountByPage(queryMap);
			System.out.println(totalNum);
			if(statr == null){
				queryMap.put("numStart", 0);
			}else{
				queryMap.put("numStart", (statr-1)*10);
			}
			glList = glDao.queryGLByPage(queryMap);
			
			JSONObject object = new JSONObject();  
	        object.put("num", totalNum); 
	        object.put("list", glList); 
	        System.out.println(totalNum+object.toString());
	        iResponse.setCharacterEncoding("utf-8");
	        iResponse.getWriter().write(object.toString());
		} catch (RuntimeException e) {
			e.printStackTrace();
		}
		return null;	
	}
	
	public String detail() throws ParseException, IOException{
		this.update();
		HttpSession session = ServletActionContext.getRequest().getSession();
		HttpServletResponse iResponse =ServletActionContext.getResponse();
		Map queryMap = new HashMap();
		queryMap.put("glId", glId);
		queryMap.put("parentId", glId);
		glList = glDao.queryGLByPage(queryMap);
		fileList = fileDao.queryFileByPage(queryMap);
		
		JSONObject object = new JSONObject();  
        object.put("list", glList); 
        object.put("fileList", fileList); 
        System.out.println(object.toString());
        iResponse.setCharacterEncoding("utf-8");
        iResponse.getWriter().write(object.toString());
        
		return null;
	}
	
	public void delete() throws Exception{
		System.out.println("Start to execute delete Action!");
		HttpServletResponse iResponse =ServletActionContext.getResponse();
		HttpServletRequest request = ServletActionContext.getRequest();
		Map queryMap = new HashMap();
		String path = request.getSession().getServletContext().getRealPath("\\share");  
		
		try {
			glId = Long.parseLong(request.getParameter("glId"));
			queryMap.put("parentId", glId);
			fileList = fileDao.queryFileByPage(queryMap);
			for(int i=0;i<fileList.size();i++){
				files = (Files)fileList.get(i);
		        String filePath = path + "\\" + files.getOnlinePath();
		        System.out.println(filePath);
		        File file = new File(filePath);
				if (file.exists() && file.isFile()) {
		            file.delete();
		           System.out.println("删除成功");
		        } 
			}
			glDao.deleteById(glId);
			fileDao.deleteById(glId);
			iResponse.getWriter().write("1");
		} catch (Exception e) {
			e.printStackTrace();
			iResponse.getWriter().write("2");
		}
	}
	
	//服务更新
	public void update() throws ParseException{
		ServiceGl gl = new ServiceGl();
		gl.setGlId(getGlId());
		gl.setGlName(getGlName());
		gl.setGlNumber(getGlNumber());
		gl.setFbTime(new Date());
		glBO.updateById(gl);
	}
	
	public String deleteFile() throws IOException {
		HttpServletRequest request = ServletActionContext.getRequest();	
		HttpServletResponse response = ServletActionContext.getResponse();
		String path = request.getSession().getServletContext().getRealPath("\\share");  
        System.out.println(path);
        String filePath = path + "\\" + this.fileName;
        System.out.println(filePath);
        File file = new File(filePath);
        // 如果文件路径所对应的文件存在，并且是一个文件，则直接删除
        if (file.exists() && file.isFile()) {
            file.delete();
            response.setCharacterEncoding("UTF-8"); 
			response.getWriter().write("1");
        } else {
        	response.setCharacterEncoding("UTF-8"); 
			response.getWriter().write("2");
        }
		return null;
    }

	public Long getGlId() {
		return glId;
	}

	public void setGlId(Long glId) {
		this.glId = glId;
	}

	public String getGlNumber() {
		return glNumber;
	}

	public void setGlNumber(String glNumber) {
		this.glNumber = glNumber;
	}

	public String getGlName() {
		return glName;
	}

	public void setGlName(String glName) {
		this.glName = glName;
	}

	public Date getFbTime() {
		return fbTime;
	}

	public void setFbTime(Date fbTime) {
		this.fbTime = fbTime;
	}

	public String getFbPop() {
		return fbPop;
	}

	public void setFbPop(String fbPop) {
		this.fbPop = fbPop;
	}

	public Long getStatr() {
		return statr;
	}

	public void setStatr(Long statr) {
		this.statr = statr;
	}

	public Long getTotalNum() {
		return totalNum;
	}

	public void setTotalNum(Long totalNum) {
		this.totalNum = totalNum;
	}

	public String getArlt() {
		return arlt;
	}

	public void setArlt(String arlt) {
		this.arlt = arlt;
	}

	public ServiceGl getServiceGl() {
		return serviceGl;
	}

	public void setServiceGl(ServiceGl serviceGl) {
		this.serviceGl = serviceGl;
	}

	public ServiceGlDao getGlDao() {
		return glDao;
	}

	public void setGlDao(ServiceGlDao glDao) {
		this.glDao = glDao;
	}

	public ServiceGlBO getGlBO() {
		return glBO;
	}

	public void setGlBO(ServiceGlBO glBO) {
		this.glBO = glBO;
	}

	public List getGlList() {
		return glList;
	}

	public void setGlList(List glList) {
		this.glList = glList;
	}
}